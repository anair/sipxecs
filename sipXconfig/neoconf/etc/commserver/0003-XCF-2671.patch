From 563816c1d94fe2e2d2814fd6629c445fee4415d8 Mon Sep 17 00:00:00 2001
From: M. Ranganathan <mranga@sipxpbx.example.com>
Date: Thu, 3 Jul 2008 15:57:38 -0400
Subject: [PATCH] XCF 2671

Authenticate as logged in user.
---
 .../sipxconfig/sip/AccountManagerImpl.java         |   10 ++++++----
 .../sipfoundry/sipxconfig/sip/InviteMessage.java   |    6 ++++--
 .../sipfoundry/sipxconfig/sip/JainSipMessage.java  |    4 ++--
 .../sipfoundry/sipxconfig/sip/NotifyMessage.java   |    4 +++-
 .../sipfoundry/sipxconfig/sip/SipStackBean.java    |    8 ++++----
 .../sipxconfig/sip/TransactionApplicationData.java |   12 ++++++++++++
 6 files changed, 31 insertions(+), 13 deletions(-)

diff --git a/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/sip/AccountManagerImpl.java b/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/sip/AccountManagerImpl.java
index 9243bca..7dda410 100644
--- a/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/sip/AccountManagerImpl.java
+++ b/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/sip/AccountManagerImpl.java
@@ -9,11 +9,11 @@
  */
 package org.sipfoundry.sipxconfig.sip;
 
-import javax.sip.address.SipURI;
-
 import gov.nist.javax.sip.clientauthutils.AccountManager;
 import gov.nist.javax.sip.clientauthutils.UserCredentials;
 
+import javax.sip.ClientTransaction;
+
 import org.sipfoundry.sipxconfig.common.User;
 
 class AccountManagerImpl implements AccountManager {
@@ -24,7 +24,9 @@ class AccountManagerImpl implements AccountManager {
         m_userCredentials = new UserCredentialsImpl(user, realm);
     }
 
-    public UserCredentials getCredentials(SipURI sipUri, String realm) {
-        return m_userCredentials;
+    public UserCredentials getCredentials(ClientTransaction clientTransaction, String realm) {
+        TransactionApplicationData tad = (TransactionApplicationData) clientTransaction
+                .getApplicationData();
+        return tad.getUserCredentials();
     }
 }
diff --git a/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/sip/InviteMessage.java b/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/sip/InviteMessage.java
index e6a78df..ad0a73b 100644
--- a/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/sip/InviteMessage.java
+++ b/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/sip/InviteMessage.java
@@ -50,20 +50,20 @@ public class InviteMessage extends JainSipMessage {
         m_toAddrSpec = toAddressSpec;
         m_fromAddrSpec = fromAddressSpec;
         m_operator = operator;
-        // TODO: not sure what to do next with user credentials info...
         m_userCredentials = userCredentials;
     }
 
     @Override
     public ClientTransaction createAndSend() {
         try {
-            Request request = createRequest(Request.INVITE, m_fromAddrSpec, m_toAddrSpec);
+            Request request = createRequest(Request.INVITE, m_userCredentials.getUserName(), m_fromAddrSpec, m_toAddrSpec);
             AllowHeader allowHeader = getHelper().createAllowHeader(METHODS);
             request.addHeader(allowHeader);
             String sdpBody = getHelper().formatWithIpAddress(SDP_BODY_FORMAT);
             request.setContent(sdpBody, getHelper().createContentTypeHeader());
             ClientTransaction ctx = getSipProvider().getNewClientTransaction(request);
             TransactionApplicationData tad = new TransactionApplicationData(m_operator, getHelper(), this);
+            tad.setUserCredentials(m_userCredentials);
             ctx.setApplicationData(tad);
             if (m_dialog == null) {
                 ctx.sendRequest();
@@ -86,4 +86,6 @@ public class InviteMessage extends JainSipMessage {
     public String getFromAddrSpec() {
         return m_fromAddrSpec;
     }
+    
+   
 }
diff --git a/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/sip/JainSipMessage.java b/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/sip/JainSipMessage.java
index e801bd1..96b689c 100644
--- a/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/sip/JainSipMessage.java
+++ b/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/sip/JainSipMessage.java
@@ -33,9 +33,9 @@ public abstract class JainSipMessage extends AbstractMessage {
         this(helper, null, null);
     }
 
-    protected Request createRequest(String requestType, String fromAddrSpec, String toAddrSpec) {
+    protected Request createRequest(String requestType, String userName, String fromAddrSpec, String toAddrSpec) {
         try {
-            Request request = m_helper.createRequest(requestType, fromAddrSpec, toAddrSpec);
+            Request request = m_helper.createRequest(requestType, userName, fromAddrSpec, toAddrSpec);
             m_helper.addContent(request, m_contentType, m_payload);
             return request;
 
diff --git a/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/sip/NotifyMessage.java b/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/sip/NotifyMessage.java
index ef584ea..9cf7eb1 100644
--- a/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/sip/NotifyMessage.java
+++ b/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/sip/NotifyMessage.java
@@ -9,6 +9,8 @@
  */
 package org.sipfoundry.sipxconfig.sip;
 
+import static org.sipfoundry.sipxconfig.common.SpecialUser.SpecialUserType.CONFIG_SERVER;
+
 import java.text.ParseException;
 import java.util.EventObject;
 
@@ -45,7 +47,7 @@ class NotifyMessage extends JainSipMessage {
 
     public ClientTransaction createAndSend() {
         try {
-            Request request = createRequest(Request.NOTIFY, null, m_addrSpec);
+            Request request = createRequest(Request.NOTIFY, CONFIG_SERVER.getUserName(), null, m_addrSpec);
             getHelper().addEventHeader(request, m_eventType);
             getHelper().addHeader(request, SubscriptionStateHeader.NAME, SubscriptionStateHeader.ACTIVE);
             ClientTransaction clientTx = getSipProvider().getNewClientTransaction(request);
diff --git a/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/sip/SipStackBean.java b/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/sip/SipStackBean.java
index 21683fe..e967a86 100644
--- a/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/sip/SipStackBean.java
+++ b/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/sip/SipStackBean.java
@@ -240,8 +240,8 @@ public class SipStackBean implements InitializingBean {
         return m_hostName;
     }
 
-    private SipURI createOurSipUri() throws ParseException {
-        return m_addressFactory.createSipURI(CONFIG_SERVER.getUserName(), m_hostName);
+    private SipURI createOurSipUri(String userName) throws ParseException {
+        return m_addressFactory.createSipURI(userName, m_hostName);
     }
 
     private FromHeader createFromHeader(SipURI fromAddress) throws ParseException {
@@ -275,10 +275,10 @@ public class SipStackBean implements InitializingBean {
         return m_headerFactory.createViaHeader(host, port, transport, null);
     }
 
-    final Request createRequest(String requestType, String fromAddrSpec, String addrSpec) throws ParseException {
+    final Request createRequest(String requestType, String userName, String fromAddrSpec, String addrSpec) throws ParseException {
         SipURI fromUri;
         if (fromAddrSpec == null) {
-            fromUri = createOurSipUri();
+            fromUri = createOurSipUri(userName);
         } else {
             fromUri = (SipURI) m_addressFactory.createURI(fromAddrSpec);
         }
diff --git a/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/sip/TransactionApplicationData.java b/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/sip/TransactionApplicationData.java
index a8ff916..89ca25e 100644
--- a/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/sip/TransactionApplicationData.java
+++ b/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/sip/TransactionApplicationData.java
@@ -26,6 +26,7 @@ import javax.sip.header.ReferToHeader;
 import javax.sip.message.Request;
 import javax.sip.message.Response;
 
+import gov.nist.javax.sip.clientauthutils.UserCredentials;
 import gov.nist.javax.sip.header.extensions.ReferredByHeader;
 
 import org.apache.commons.logging.Log;
@@ -49,6 +50,8 @@ class TransactionApplicationData {
     private SipStackBean m_helper;
 
     private int m_counter;
+    
+    private UserCredentials m_userCredentials;
 
     public TransactionApplicationData(Operator operator, SipStackBean stackBean, JainSipMessage message) {
         m_operator = operator;
@@ -113,6 +116,7 @@ class TransactionApplicationData {
                         // And send it to the other side.
                         TransactionApplicationData tad = new TransactionApplicationData(Operator.SEND_REFER, m_helper,
                                 null);
+                        tad.setUserCredentials(m_userCredentials);
                         ctx.setApplicationData(tad);
                         dialog.sendRequest(ctx);
                     }
@@ -148,4 +152,12 @@ class TransactionApplicationData {
             m_helper.tearDownDialog(dialog);
         }
     }
+    
+    public UserCredentials getUserCredentials() {
+        return m_userCredentials;
+    }
+    
+    public void setUserCredentials(UserCredentials userCredentials) {
+        m_userCredentials = userCredentials;
+    }
 }
-- 
1.5.4.1

