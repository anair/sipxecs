#!@bash@
##
## create-ssl-truststore.sh
##
##  Copyright (C) 2007 Pingtel Corp., certain elements licensed under a Contributor Agreement.  
##  Contributors retain copyright to elements licensed under a Contributor Agreement.
##  Licensed to the User under the LGPL license.
##

Action=CREATE
TrustStore="cacert"
Password="changeit"
CaPath=""
CertificatesChecksum=""
Checksum=""
PreviousChecksum=""
openssl="@openssl@"

while [ $# -ne 0 ]
do
    case ${1} in
        --checksum)
            shift
            if [ -z "${1}" ]; then
                echo "Missing checksum file name: $@" 1>&2
                ACTION=USAGE
                break
            fi
            CertificatesChecksum=${1}
            Action=CHECKSUM
            ;;

        --truststore)
            shift
            if [ -z "${1}" ]; then
                echo "Missing truststore file name: $@" 1>&2
                ACTION=USAGE
                break
            fi
            TrustStore=${1}
            ;;

        --ca-path)
            shift
            if [ -z "${1}" ]; then
                echo "Missing CA directory: $@" 1>&2
                ACTION=USAGE
                break
            fi
            CaPath=${1}
            ;;

        ##
        ## handle an unknown switch
        ##
        *)
            Action=USAGE
            break
            ;;

    esac           

    shift # always consume 1
done


if [ "${Action}" = "USAGE" -o -z "${CaPath}" ]; then
    cat <<EOF
Usage:
   create-ssl-truststore.sh 
       [--truststore truststore]  filename of truststore, default is cacerts
       [--checksum checksumfile]  create a checksum of contents and compare with previous run
                                   to avoid recreating same truststore avoiding running keytool
       [--ca-patch directory]     name of the directory containing certificates and CRL to be 
                                   included in the truststore

   example :
     create-ssl-truststore.sh --ca-path /etc/authorites

EOF
    exit 1
fi

if [ "${Action}" = "CHECKSUM" ]; then
  if [ `uname -s` = FreeBSD ] ; then
    MD5SUM="/sbin/md5 -r"
  else
    MD5SUM=md5sum
  fi
  Checksum=`find $CaPath -type f -name '*.cr[lt]' | xargs @xargs.replace@F cat "F" | $MD5SUM | awk '{print $1}'`
  if [ -f $CertificatesChecksum ]; then
    if [ -f "$TrustStore" ]; then
      PreviousChecksum=`cat $CertificatesChecksum`
      if [ x"$Checksum" = x"$PreviousChecksum" ]; then
        # Skip creating $TrustStore - previous checksum of contents matched
        exit 0;
      fi
    fi
  fi
fi

rm "$TrustStore" 2> /dev/null

find $CaPath \( -type f -name '*.cr[lt]' \) | \
while read Certificate
do
    caname="`$openssl x509 -noout -text -in "$Certificate" |\
         grep Subject: | sed -e 's;.*CN=;;' -e 's;/Em.*;;'`" || exit 1

    KeyTool=`@bin.dir@/sipx-config --java keytool`
    openssl x509 -in "$Certificate" | \
        $KeyTool -import -noprompt -alias "$caname" \
        -keystore "$TrustStore" -storepass "$Password" > /dev/null || exit 1
    chown @sipxpbx.user@ "$TrustStore"
    chmod 600 "$TrustStore"
done

if [ "${Action}" = "CHECKSUM" ]; then
  echo $Checksum > $CertificatesChecksum
fi
