#!@BASH@
### -*- mode: shell-script;-*-
###
### sipx-disable-on-distributed
###

Action=DEFAULT
Service=""

while [ $# -ne 0 ]
do
    case ${1} in
        ##
        ## handle the 'end of options' marker
        ##
        --)
            ;;

        ##
        ## handle an unknown switch
        ##
        -*)
            Action=USAGE
            break
            ;;

        *)
            if [ -z "${Service}" ]
            then
                Service=${1}
            else
                echo "Too many arguments supplied: $@" 1>&2
                Action=USAGE
                break
            fi
            ;;
    esac           

    shift # always consume 1
done

if [ "${Action}" = "USAGE" -o -z "${Service}" ]
then
    cat <<USAGE

Usage:
    
    sipx-disable-on-distributed <service-name>

    Edits the sipX process definition file to disable the named service
    if this system is not the master system of a sipXecs cluster.

USAGE
    exit
fi

libexecdir=${TEST_LIBEXECDIR:-@SIPX_LIBEXECDIR@}

. ${libexecdir}/sipx-utils.sh || exit 1

sipx_system_is_master && sipx_enable_service "${Service}" || sipx_disable_service "${Service}"

