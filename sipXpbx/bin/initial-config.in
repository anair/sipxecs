#!/bin/bash
#################################################################
# Generate the initial configuration for a distributed system 
# as a compressed tar file.
#################################################################

INITIAL_CONFIG_BASE="@SIPX_TMPDIR@/initial-config"

Action=GENERATE
ExitStatus=1

while [ $# -ne 0 ]
do
    case ${1} in
        ##
        ## handle the 'end of options' marker
        ##
        --)
            ;;

        ##
        ## handle an unknown switch
        ##
        -h|--help|--usage|-?|-*)
            Action=USAGE
            ExitStatus=0
            break
            ;;

        -*)
            Action=USAGE
            break
            ;;

        *)
            if [ -z "${newHostname}" ]
            then
                newHostname=${1}
            else
                echo "Too many arguments supplied: $@" 1>&2
                Action=USAGE
                break
            fi
            ;;
    esac           

    shift # always consume 1
done

if [ "${Action}" = "USAGE" ]
then
    cat <<USAGE

Usage:
    
    initial-config <new-host-fqdn>

    Generates a configuration file for the new host

USAGE
    exit $ExitStatus
fi

myHostname=`hostname -f`
INITIAL_CONFIG="${INITIAL_CONFIG_BASE}/${newHostname}"

if test -d "${INITIAL_CONFIG}"; then
	rm -rf "${INITIAL_CONFIG}"
fi

mkdir -p "${INITIAL_CONFIG}@SIPX_CONFDIR@" || exit 1

# copy the domain configuration
cp -v "@SIPX_CONFDIR@/domain-config" "${INITIAL_CONFIG}@SIPX_CONFDIR@" || exit 1

# create a modified ntp.conf file 
#    modify local clock configuration so it will be lower stratum than the master systems clock
test -d "${INITIAL_CONFIG}/etc" || mkdir -p "${INITIAL_CONFIG}/etc" || exit 1
perl -p \
    -e 's/fudge\s+127.127.1.0\s+stratum\s+10/fudge  127.127.1.0 stratum 12/;' \
    -e "END { print \"\\nserver ${myHostname}\\n\"; };" \
    /etc/ntp.conf > "${INITIAL_CONFIG}/etc/ntp.conf" || exit 1

# generate TLS credentials 
@SIPX_BINDIR@/ssl-cert/gen-ssl-keys.sh \
    --workdir "@SIPX_VARDIR@/certdb" -d -s "${newHostname}" \
    || exit 1
@SIPX_BINDIR@/ssl-cert/install-cert.sh \
    --workdir "@SIPX_VARDIR@/certdb" --install-prefix "${INITIAL_CONFIG}" "${newHostname}" \
    || exit 1

# package the configuration for the sipxecs-setup-system script to unpack
tar -czf "${INITIAL_CONFIG_BASE}/${newHostname}.tar.gz" -C "${INITIAL_CONFIG}" .
