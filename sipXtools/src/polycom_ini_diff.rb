#!/usr/bin/env ruby
#
# Copyright (C) 2008 Nortel, certain elements licensed under a Contributor Agreement.  
# Contributors retain copyright to elements licensed under a Contributor Agreement.
# Licensed to the User under the LGPL license.
#
###################################################

# Usage: polycom_ini_diff.rb File1 File2
# Does a "diff" of the two specified INI files that were generated by 
# polycom_config_dump.rb, and reports the following differences (in sorted order):
#   D=> Parameters that appear in both files, but with different values.
#   1=> Parameters that appear only in the first file.
#   2=> Parameters that appear only in the second file.

def do_hash_diff(hash_1, hash_2)
   new_hash_1 = {}
   num_same_lines = 0
   num_diff_lines = 0

   # Deal with the entries that do appear in both files.
   sorted_nested_array = hash_1.sort
   sorted_nested_array.each do |pair|
      if nil != hash_2[pair[0]] 
         # This entry is in both files.
         if pair[1] != hash_2[pair[0]] 
            # The value of this entry is different between the two file.
            num_diff_lines = num_diff_lines + 1
            puts "D=> #{pair[0]} = 1:\"#{pair[1]}\" vs 2:\"#{hash_2[pair[0]]}\""
         else
            num_same_lines = num_same_lines + 1
         end

         # In either case, remove the entry from both hashes.  (i.e. Remove it from 2, and do not add it to the new 1.)
         hash_2.delete(pair[0])
      else
         # Do not remove the entry from the hashes.  (i.e. Add it to the new 1 hash.)
         new_hash_1[pair[0]] = pair[1]
      end
   end

   sorted_nested_array = new_hash_1.sort
   sorted_nested_array.each do |pair|
      puts "1=> #{pair[0]} = \"#{pair[1]}\""
   end

   sorted_nested_array = hash_2.sort
   sorted_nested_array.each do |pair|
      puts "2=> #{pair[0]} = \"#{pair[1]}\""
   end

   puts ""
   puts "Identical: #{num_same_lines}"
   puts "Different: #{num_diff_lines}"
   puts "Only in 1: #{new_hash_1.size}"
   puts "Only in 2: #{hash_2.size}"

end

def parse_init_file(path)
   hash = {}
   input = File.open(path, "r")   
   input.readlines.each do |line|
      pair = line.split(" = \"")
      hash[pair[0]] = pair[1].chomp.chop
   end 
   input.close
   hash
end

def do_diff(path1, path2)
   puts "DIFF 1:#{path1} vs. 2:#{path2}"
   do_hash_diff(parse_init_file(path1), parse_init_file(path2))
end

do_diff(ARGV[0], ARGV[1])

