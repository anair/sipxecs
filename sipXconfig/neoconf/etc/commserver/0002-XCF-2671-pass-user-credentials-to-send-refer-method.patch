From 362c0f30131e81b0e12ed0b9d9083bbff5409d8e Mon Sep 17 00:00:00 2001
From: dkrzemin <damian@pingtel.com>
Date: Thu, 3 Jul 2008 11:31:57 -0400
Subject: [PATCH] XCF-2671 pass user credentials to send refer method

We need to authenticate the REFER as user who initiated the call.
SipService.sendRefer now takes User parameter.

This patch does not actually use the credential informaton yet, it's just passing it to the SipService.
---
 .../sipfoundry/sipxconfig/sip/InviteMessage.java   |   20 +++++++++++----
 .../org/sipfoundry/sipxconfig/sip/SipService.java  |   14 ++++++----
 .../sipfoundry/sipxconfig/sip/SipServiceImpl.java  |   25 ++++++++++++++-----
 .../org/sipfoundry/sipxconfig/sip/sip.beans.xml    |    1 +
 .../sipxconfig/site/common/ClickToCallPanel.java   |    4 +-
 .../site/user_portal/UserPhonebookPage.java        |   15 ++++++-----
 .../site/user_portal/UserPhonebookPageTest.java    |    5 ++-
 7 files changed, 54 insertions(+), 30 deletions(-)

diff --git a/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/sip/InviteMessage.java b/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/sip/InviteMessage.java
index 33c887f..e6a78df 100644
--- a/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/sip/InviteMessage.java
+++ b/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/sip/InviteMessage.java
@@ -1,14 +1,16 @@
 /*
  *
  *
- * Copyright (C) 2008 Pingtel Corp., certain elements licensed under a Contributor Agreement.  
+ * Copyright (C) 2008 Pingtel Corp., certain elements licensed under a Contributor Agreement.
  * Contributors retain copyright to elements licensed under a Contributor Agreement.
  * Licensed to the User under the LGPL license.
- * 
+ *
  *
  */
 package org.sipfoundry.sipxconfig.sip;
 
+import gov.nist.javax.sip.clientauthutils.UserCredentials;
+
 import java.text.ParseException;
 import java.util.Arrays;
 import java.util.List;
@@ -29,24 +31,30 @@ public class InviteMessage extends JainSipMessage {
     private static final List<String> METHODS = Arrays.asList(Request.INVITE, Request.ACK, Request.OPTIONS,
             Request.CANCEL, Request.BYE, Request.REFER, Request.NOTIFY);
 
-    private String m_toAddrSpec;
+    private final String m_toAddrSpec;
 
-    private String m_fromAddrSpec;
+    private final String m_fromAddrSpec;
 
-    private Operator m_operator;
+    private final Operator m_operator;
 
     private Dialog m_dialog;
 
+    private final UserCredentials m_userCredentials;
+
     /**
      * @param toAddressSpec the target for the 3pcc.
      */
-    public InviteMessage(SipStackBean helper, String fromAddressSpec, String toAddressSpec, Operator operator) {
+    public InviteMessage(SipStackBean helper, UserCredentials userCredentials, String fromAddressSpec,
+            String toAddressSpec, Operator operator) {
         super(helper);
         m_toAddrSpec = toAddressSpec;
         m_fromAddrSpec = fromAddressSpec;
         m_operator = operator;
+        // TODO: not sure what to do next with user credentials info...
+        m_userCredentials = userCredentials;
     }
 
+    @Override
     public ClientTransaction createAndSend() {
         try {
             Request request = createRequest(Request.INVITE, m_fromAddrSpec, m_toAddrSpec);
diff --git a/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/sip/SipService.java b/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/sip/SipService.java
index 12b6d42..ac1fa14 100644
--- a/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/sip/SipService.java
+++ b/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/sip/SipService.java
@@ -1,14 +1,16 @@
 /*
- * 
- * 
- * Copyright (C) 2007 Pingtel Corp., certain elements licensed under a Contributor Agreement.  
+ *
+ *
+ * Copyright (C) 2007 Pingtel Corp., certain elements licensed under a Contributor Agreement.
  * Contributors retain copyright to elements licensed under a Contributor Agreement.
  * Licensed to the User under the LGPL license.
- * 
+ *
  * $
  */
 package org.sipfoundry.sipxconfig.sip;
 
+import org.sipfoundry.sipxconfig.common.User;
+
 
 
 /**
@@ -18,6 +20,6 @@ public interface SipService {
     public void sendCheckSync(String addrSpec);
 
     public void sendNotify(String addrSpec, String eventType, String contentType, byte[] payload);
-    
-    public void sendRefer(String sourceAddrSpec, String destinationAddSpec);
+
+    public void sendRefer(User user, String sourceAddrSpec, String destinationAddSpec);
 }
diff --git a/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/sip/SipServiceImpl.java b/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/sip/SipServiceImpl.java
index b6a61a6..cc1670f 100644
--- a/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/sip/SipServiceImpl.java
+++ b/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/sip/SipServiceImpl.java
@@ -1,22 +1,28 @@
 /*
- * 
- * 
- * Copyright (C) 2007 Pingtel Corp., certain elements licensed under a Contributor Agreement.  
+ *
+ *
+ * Copyright (C) 2007 Pingtel Corp., certain elements licensed under a Contributor Agreement.
  * Contributors retain copyright to elements licensed under a Contributor Agreement.
  * Licensed to the User under the LGPL license.
- * 
+ *
  * $
  */
 package org.sipfoundry.sipxconfig.sip;
 
+import gov.nist.javax.sip.clientauthutils.UserCredentials;
+
 import org.apache.commons.logging.Log;
 import org.apache.commons.logging.LogFactory;
+import org.sipfoundry.sipxconfig.common.User;
+import org.sipfoundry.sipxconfig.domain.DomainManager;
+import org.springframework.beans.factory.annotation.Required;
 
 public class SipServiceImpl extends SipStackBean implements SipService {
 
     static final Log LOG = LogFactory.getLog(SipServiceImpl.class);
 
-  
+    private DomainManager m_domainManager;
+
     public void sendCheckSync(String addrSpec) {
         AbstractMessage message = new NotifyMessage(this, addrSpec, "check-sync");
         message.createAndSend();
@@ -29,11 +35,16 @@ public class SipServiceImpl extends SipStackBean implements SipService {
     }
 
 
-    public void sendRefer(String sourceAddrSpec, String destinationAddrSpec) {
+    public void sendRefer(User user, String sourceAddrSpec, String destinationAddrSpec) {
+        UserCredentials credentials = new UserCredentialsImpl(user, m_domainManager.getAuthorizationRealm());
         LOG.debug("sendRefer: source = " + sourceAddrSpec + " dest = " + destinationAddrSpec);
-        AbstractMessage message = new InviteMessage(this, destinationAddrSpec, sourceAddrSpec,
+        AbstractMessage message = new InviteMessage(this, credentials, destinationAddrSpec, sourceAddrSpec,
                 Operator.SEND_3PCC_REFER_CALL_SETUP);
         message.createAndSend();
     }
 
+    @Required
+    public void setDomainManager(DomainManager domainManager) {
+        m_domainManager = domainManager;
+    }
 }
diff --git a/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/sip/sip.beans.xml b/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/sip/sip.beans.xml
index b058bce..b981315 100644
--- a/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/sip/sip.beans.xml
+++ b/sipXconfig/neoconf/src/org/sipfoundry/sipxconfig/sip/sip.beans.xml
@@ -19,6 +19,7 @@
     <property name="transport" value="udp" />
     <property name="port" value="5180" />
     <property name="logAppender" ref="sfLogAppender"/>
+    <property name="domainManager" ref="domainManager"/>
     <property name="properties">
       <value>
         javax.sip.STACK_NAME=sipXconfig
diff --git a/sipXconfig/web/src/org/sipfoundry/sipxconfig/site/common/ClickToCallPanel.java b/sipXconfig/web/src/org/sipfoundry/sipxconfig/site/common/ClickToCallPanel.java
index 0d46023..41a1f53 100644
--- a/sipXconfig/web/src/org/sipfoundry/sipxconfig/site/common/ClickToCallPanel.java
+++ b/sipXconfig/web/src/org/sipfoundry/sipxconfig/site/common/ClickToCallPanel.java
@@ -1,7 +1,7 @@
 /*
  *
  *
- * Copyright (C) 2008 Pingtel Corp., certain elements licensed under a Contributor Agreement.  
+ * Copyright (C) 2008 Pingtel Corp., certain elements licensed under a Contributor Agreement.
  * Contributors retain copyright to elements licensed under a Contributor Agreement.
  * Licensed to the User under the LGPL license.
  */
@@ -38,6 +38,6 @@ public abstract class ClickToCallPanel extends BaseComponent {
         String userAddrSpec = getUser().getAddrSpec(domain);
         String number = getNumber();
         String destAddrSpec = SipUri.fix(number, domain);
-        getSipService().sendRefer(userAddrSpec, destAddrSpec);
+        getSipService().sendRefer(getUser(), userAddrSpec, destAddrSpec);
     }
 }
diff --git a/sipXconfig/web/src/org/sipfoundry/sipxconfig/site/user_portal/UserPhonebookPage.java b/sipXconfig/web/src/org/sipfoundry/sipxconfig/site/user_portal/UserPhonebookPage.java
index f955e75..8dce46b 100644
--- a/sipXconfig/web/src/org/sipfoundry/sipxconfig/site/user_portal/UserPhonebookPage.java
+++ b/sipXconfig/web/src/org/sipfoundry/sipxconfig/site/user_portal/UserPhonebookPage.java
@@ -1,10 +1,10 @@
 /*
- * 
- * 
- * Copyright (C) 2007 Pingtel Corp., certain elements licensed under a Contributor Agreement.  
+ *
+ *
+ * Copyright (C) 2007 Pingtel Corp., certain elements licensed under a Contributor Agreement.
  * Contributors retain copyright to elements licensed under a Contributor Agreement.
  * Licensed to the User under the LGPL license.
- * 
+ *
  * $
  */
 package org.sipfoundry.sipxconfig.site.user_portal;
@@ -61,6 +61,7 @@ public abstract class UserPhonebookPage extends UserBasePage implements PageBegi
 
     public abstract void setCurrentNumber(String number);
 
+    @Override
     public void pageBeginRender(PageEvent event) {
         super.pageBeginRender(event);
 
@@ -83,14 +84,14 @@ public abstract class UserPhonebookPage extends UserBasePage implements PageBegi
 
     /**
      * Implements click to call link
-     * 
+     *
      * @param number number to call - refer is sent to current user
      */
     public void call(String number) {
         String domain = getDomainManager().getDomain().getName();
         String userAddrSpec = getUser().getAddrSpec(domain);
         String destAddrSpec = SipUri.fix(number, domain);
-        getSipService().sendRefer(userAddrSpec, destAddrSpec);
+        getSipService().sendRefer(getUser(), userAddrSpec, destAddrSpec);
     }
 
     /**
@@ -113,7 +114,7 @@ public abstract class UserPhonebookPage extends UserBasePage implements PageBegi
     /**
      * Called whenever new row is about to displayed. Sorts entries into extensions (that look
      * like phone numbers) and sipIds (that look like SIP usernames)
-     * 
+     *
      * @param entry phone book entry
      */
     public void setPhonebookEntry(PhonebookEntry entry) {
diff --git a/sipXconfig/web/test/org/sipfoundry/sipxconfig/site/user_portal/UserPhonebookPageTest.java b/sipXconfig/web/test/org/sipfoundry/sipxconfig/site/user_portal/UserPhonebookPageTest.java
index 2032c6c..634a592 100644
--- a/sipXconfig/web/test/org/sipfoundry/sipxconfig/site/user_portal/UserPhonebookPageTest.java
+++ b/sipXconfig/web/test/org/sipfoundry/sipxconfig/site/user_portal/UserPhonebookPageTest.java
@@ -35,6 +35,7 @@ public class UserPhonebookPageTest extends TestCase {
     private UserPhonebookPage m_out;
     private PhonebookTestHelper m_testHelper;
 
+    @Override
     public void setUp() {
         m_portalUser = new User();
         m_portalUser.setName("portalUser");
@@ -81,8 +82,8 @@ public class UserPhonebookPageTest extends TestCase {
 
     public void testCall() {
         SipService sipService = createMock(SipService.class);
-        sipService.sendRefer("sip:portalUser@example.com", "sip:123@example.com");
-        sipService.sendRefer("sip:portalUser@example.com", "sip:123@example.org");
+        sipService.sendRefer(m_portalUser, "sip:portalUser@example.com", "sip:123@example.com");
+        sipService.sendRefer(m_portalUser, "sip:portalUser@example.com", "sip:123@example.org");
         replay(sipService);
 
         PropertyUtils.write(m_out, "sipService", sipService);
-- 
1.5.4.1

